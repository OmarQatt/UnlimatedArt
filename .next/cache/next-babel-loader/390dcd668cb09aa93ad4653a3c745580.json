{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport connectDB from '../../../utils/connectDB';\nimport Products from '../../../models/productModel';\nimport auth from '../../../middleware/auth';\nconnectDB();\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await getProducts(req, res);\n      break;\n\n    case \"POST\":\n      await createProduct(req, res);\n      break;\n  }\n});\n\nclass APIfeatures {\n  constructor(query, queryString) {\n    this.query = query;\n    this.queryString = queryString;\n  }\n\n  filtering() {\n    const queryObj = _objectSpread({}, this.queryString);\n\n    const excludeFields = ['page', 'sort', 'limit'];\n    excludeFields.forEach(el => delete queryObj[el]);\n    if (queryObj.category !== 'all') this.query.find({\n      category: queryObj.category\n    });\n    if (queryObj.title !== 'all') this.query.find({\n      title: {\n        $regex: queryObj.title\n      }\n    });\n    this.query.find();\n    return this;\n  }\n\n  sorting() {\n    if (this.queryString.sort) {\n      const sortBy = this.queryString.sort.split(',').join('');\n      this.query = this.query.sort(sortBy);\n    } else {\n      this.query = this.query.sort('-createdAt');\n    }\n\n    return this;\n  }\n\n  paginating() {\n    const page = this.queryString.page * 1 || 1;\n    const limit = this.queryString.limit * 1 || 6;\n    const skip = (page - 1) * limit;\n    this.query = this.query.skip(skip).limit(limit);\n    return this;\n  }\n\n}\n\nconst getProducts = async (req, res) => {\n  try {\n    const features = new APIfeatures(Products.find(), req.query).filtering().sorting().paginating();\n    const products = await features.query;\n    res.json({\n      status: 'success',\n      result: products.length,\n      products\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};\n\nconst createProduct = async (req, res) => {\n  try {\n    const result = await auth(req, res);\n    if (result.role !== 'admin') return res.status(400).json({\n      err: 'Authentication is not valid.'\n    });\n    const {\n      title,\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    } = req.body;\n    if (!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0) return res.status(400).json({\n      err: 'Please add all the fields.'\n    });\n    const newProduct = new Products({\n      title: title.toLowerCase(),\n      price,\n      inStock,\n      description,\n      content,\n      category,\n      images\n    });\n    await newProduct.save();\n    res.json({\n      msg: 'Success! Created a new product'\n    });\n  } catch (err) {\n    return res.status(500).json({\n      err: err.message\n    });\n  }\n};","map":{"version":3,"names":["connectDB","Products","auth","req","res","method","getProducts","createProduct","APIfeatures","constructor","query","queryString","filtering","queryObj","excludeFields","forEach","el","category","find","title","$regex","sorting","sort","sortBy","split","join","paginating","page","limit","skip","features","products","json","status","result","length","err","message","role","price","inStock","description","content","images","body","newProduct","toLowerCase","save","msg"],"sources":["/home/omar/UnlimatedArt/pages/api/product/index.js"],"sourcesContent":["import connectDB from '../../../utils/connectDB'\nimport Products from '../../../models/productModel'\nimport auth from '../../../middleware/auth'\n\nconnectDB()\n\nexport default async (req, res) => {\n    switch(req.method){\n        case \"GET\":\n            await getProducts(req, res)\n            break;\n        case \"POST\":\n            await createProduct(req, res)\n            break;\n    }\n}\n\nclass APIfeatures {\n    constructor(query, queryString){\n        this.query = query;\n        this.queryString = queryString;\n    }\n    filtering(){\n        const queryObj = {...this.queryString}\n\n        const excludeFields = ['page', 'sort', 'limit']\n        excludeFields.forEach(el => delete(queryObj[el]))\n\n        if(queryObj.category !== 'all')\n            this.query.find({category: queryObj.category})\n        if(queryObj.title !== 'all')\n            this.query.find({title: {$regex: queryObj.title}})\n\n        this.query.find()\n        return this;\n    }\n\n    sorting(){\n        if(this.queryString.sort){\n            const sortBy = this.queryString.sort.split(',').join('')\n            this.query = this.query.sort(sortBy)\n        }else{\n            this.query = this.query.sort('-createdAt')\n        }\n\n        return this;\n    }\n\n    paginating(){\n        const page = this.queryString.page * 1 || 1\n        const limit = this.queryString.limit * 1 || 6\n        const skip = (page - 1) * limit;\n        this.query = this.query.skip(skip).limit(limit)\n        return this;\n    }\n}\n\nconst getProducts = async (req, res) => {\n    try {\n        const features = new APIfeatures(Products.find(), req.query)\n        .filtering().sorting().paginating()\n\n        const products = await features.query\n        \n        res.json({\n            status: 'success',\n            result: products.length,\n            products\n        })\n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }\n}\n\nconst createProduct = async (req, res) => {\n    try {\n        const result = await auth(req, res)\n        if(result.role !== 'admin') return res.status(400).json({err: 'Authentication is not valid.'})\n\n        const {title, price, inStock, description, content, category, images} = req.body\n\n        if(!title || !price || !inStock || !description || !content || category === 'all' || images.length === 0)\n        return res.status(400).json({err: 'Please add all the fields.'})\n\n\n        const newProduct = new Products({\n            title: title.toLowerCase(), price, inStock, description, content, category, images\n        })\n\n        await newProduct.save()\n\n        res.json({msg: 'Success! Created a new product'})\n\n    } catch (err) {\n        return res.status(500).json({err: err.message})\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}